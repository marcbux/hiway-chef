% VARIANT-CALL
%
% This workflow differs from its original at https://github.com/joergen7/variant-call
% in the following ways:
% 
% (1) It does not build an index, but uses a pre-built index
% (2) It uses only a single (large) index
% (3) It assumes the fa, fai, index, and annodb to be present on all the worker nodes
% (4) It computes several samples, amounting to 1 TB of read input data
% (5) Read input data is zipped to conserve storage
% (6) it uses multithreading and memory boundaries
% (7) it does not do QC
% (8) it obtains input read data from s3 rather than expecting it to be located in HDFS
% (9) it clusters alignment and bam file sorting
% (10) it clusters bam file merger, pileup, and varscan
%
% A variant calling workflow.
%
% Sample data can be obtained from:
% ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data/HG02025/sequence_read/
%
% The HG38 reference genome can be downloaded from
% http://hgdownload.soe.ucsc.edu/goldenPath/hg38/chromosomes/
%
% An Annovar HG38 database is expected to reside in
% /opt/data/annodb_hg38
%
% In addition to a Cuneiform interpreter the following tools need to be
% installed to run this analysis:
% - FastQC 0.11.4
% - Bowtie2 2.2.6
% - SAMtools 1.2
% - VarScan 2.3.9
% - Annovar
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Task definitions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

deftask align( bam( File ) : [fastq1 fastq2] )in bash *{
  wget $fastq1 -O - | gzip -c -d > reads_1.fastq
  wget $fastq2 -O - | gzip -c -d > reads_2.fastq
  echo "reads_1.fastq `du -b -L reads_1.fastq | awk '{print $1}'`"
  echo "reads_2.fastq `du -b -L reads_2.fastq | awk '{print $1}'`"
  bowtie2 --very-fast --no-unal -p <%= node[:saasfee][:variantcall][:threads] %> -x <%= node[:saasfee][:variantcall][:scale][:index] %> -1 reads_1.fastq -2 reads_2.fastq -S - | samtools view -b - > alignment.bam
  rm reads_1.fastq reads_2.fastq
  bam=sorted.bam
  samtools sort -@ <%= node[:saasfee][:variantcall][:threads] %> -m `expr <%= node[:saasfee][:variantcall][:memory_mb] %> / 2 / <%= node[:saasfee][:variantcall][:threads] %>`M alignment.bam sorted
}*

deftask varscan( vcf( File ) : <bam( File )> )in bash *{
  if [ ${#bam[@]} -eq "0" ]
  then
    echo "No files to merge." >&2
    exit -1
  else
    if [ ${#bam[@]} -eq "1" ]
    then
      mv $bam merged.bam
    else
      samtools merge -@ <%= node[:saasfee][:variantcall][:threads] %> merged.bam ${bam[@]}
    fi
  fi
  rm ${bam[@]}
  samtools mpileup -f <%= node[:saasfee][:variantcall][:scale][:fa] %> merged.bam | varscan mpileup2snp --output-vcf | gzip > $vcf
}*

% annovar
deftask annovar( fun( File ) exonicfun( File ) : vcf( File ) )in bash *{
  fun=table.variant_function
  exonicfun=table.exonic_variant_function
  gzip -c -d $vcf | convert2annovar.pl -format vcf4 - | annotate_variation.pl -buildver hg19 -geneanno -outfile table - <%= node[:saasfee][:variantcall][:scale][:db] %>
}*

<% i = 1 %>
<% @gz.each do |sample, runs| %>
<% if i > node[:saasfee][:variantcall][:scale][:nsamples].to_i then %>
<%   break %>
<% end %>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% <%= sample %>: Input data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<%= sample %>_fastq1 = <% runs.each do |run| %> '<%= node[:saasfee][:variantcall][:reads][:url_base] %>/<%= sample %>/sequence_read/<%= run %>_1.filt.fastq.gz'<% end -%>;

<%= sample %>_fastq2 = <% runs.each do |run| %> '<%= node[:saasfee][:variantcall][:reads][:url_base] %>/<%= sample %>/sequence_read/<%= run %>_2.filt.fastq.gz'<% end -%>;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% <%= sample %>: Workflow definition
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% <%= sample %>_qc = fastqc( fastq: <%= sample %>_fastq1 <%= sample %>_fastq2 );

<%= sample %>_bam = align( fastq1: <%= sample %>_fastq1,
                            fastq2: <%= sample %>_fastq2 );
  
<%= sample %>_vcf = varscan( bam: <%= sample %>_bam );
  
<%= sample %>_fun <%= sample %>_exonicfun = annovar( vcf: <%= sample %>_vcf );

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% <%= sample %>: Query
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% <%= sample %>_qc;
<%= sample %>_fun <%= sample %>_exonicfun;

<% i = i + 1 %>
<% end %>